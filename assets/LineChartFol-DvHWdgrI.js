import{u as P}from"./theme-DnFBuSOg.js";import{i as R}from"./index-CehbAW_K.js";import{d as A,h as d,i as D,j as Y,m as q,r as W,o as f,c as x,e as l,u as C,f as L,t as z,a as k,p as G,k as F,n as X,l as J,b as V,w as N,y as K,F as Q}from"./index-DC-2HEQ0.js";import{a as U}from"./axios-BimPEqV4.js";import{h as Z}from"./moment-C5S46NFB.js";import{_ as tt}from"./InputView.vue_vue_type_style_index_0_lang-44Xoh59i.js";import{_ as et}from"./MainWrapperView.vue_vue_type_style_index_0_lang-DE8Qi3-w.js";import{u as at}from"./spotModel-BfJFWLWi.js";import{_ as ot}from"./SelectView.vue_vue_type_style_index_0_lang-d1eKGkNv.js";const st="/assets/batt-OzIihCY1.png",lt={class:"battery-container"},nt={key:0,class:"batimg"},rt=["src"],it={class:"bt-parent"},ct={class:"bt-perc"},ut={key:1,class:"batt-failed"},pt=A({__name:"BatteryView",props:{idSpot:{type:[Number,String],required:!0}},setup(w){const o=w,i=d({}),a=d(!1);D(async()=>{await c().then(e=>{i.value=e,v()})});const v=()=>{if(i.value!=null&&i.value.timestamp!=null){const e=Z().format("YYYY-MM-DDTHH:MM:SS").split("T")[0],n=i.value.timestamp.split("T")[0];e==n&&(a.value=!0)}},h=setInterval(async()=>{await c().then(e=>{i.value=e})},6e4);Y(()=>{clearInterval(h)});const c=async()=>new Promise(async(e,n)=>{try{const s={idspot:o.idSpot},_=await U.post(q.baseEnd+"api/Battery/getbatterylevel",s);e(_.data)}catch(s){n(s)}});return(e,n)=>{const s=W("font-awesome-icon");return f(),x("div",lt,[i.value&&a.value?(f(),x("div",nt,[l("img",{src:C(st),alt:"battery"},null,8,rt),l("div",it,[l("span",{style:L({width:`${i.value.batt}%`}),class:"bt-child"},null,4),l("div",ct,z(i.value.batt)+"%",1)])])):(f(),x("span",ut,[l("b",null,[k(s,{icon:"exclamation-triangle"}),n[0]||(n[0]=G(" Battery reading failed"))])]))])}}}),dt={style:{width:"200px",position:"relative",background:"#eee",height:"5px","border-radius":"10px"}},mt=A({__name:"ChartLineView",props:{ch_name:{type:String,required:!0},ch_spot:{type:[Number,String],required:!0},ch_filter_date:{type:String,required:!0},ch_ymax:{type:Number,default:500},ch_ymin:{type:Number,default:0},ch_timesplit:{type:Number,default:15}},setup(w){const o=P(),i=d(null),a=w,v=d(null),h=d(!0),c=d(0),e=d(null),n=d(!1),s=d([]),_={notMerge:!0,lazyUpdate:!0,tooltip:{trigger:"axis",axisPointer:{type:"cross"}},axisPointer:{link:{xAxisIndex:"all"},label:{backgroundColor:"#777"}},legend:{textStyle:{color:`${o.accentColor}`}},xAxis:{type:"category",nameLocation:"start",axisLabel:{rotate:-45,color:`${o.accentColor}`,interval:"auto"},boundaryGap:!1,axisTick:{alignWithLabel:!0}},yAxis:{name:"Pressure (PSI)",min:a.ch_ymin,max:a.ch_ymax,splitLine:{lineStyle:{color:"#cccccc88"}},nameTextStyle:{verticalAlign:"middle"},axisTick:{show:!0,inside:!0},axisLabel:{color:`${o.accentColor}`},type:"value",axisLine:{show:!0}},series:[]};setTimeout(()=>{e.value.setOption(_)},500);const M=r=>new Date(r).toISOString(),O=async()=>{try{const r={id:a.ch_spot+"",date:M(a.ch_filter_date)},m=await U.post(q.baseEnd+"api/Data/getspotdata",r);c.value=80;const b=m.data.map(g=>{const $=g.timestamp.replace(".",":").split("T")[1],[u,p]=$.split(":");return`${u}:${p}`});s.value=b,c.value=85;const T=m.data.map(g=>parseFloat(g.psiValue).toFixed(2));_.xAxis=[{type:"category",data:b}],_.series=[{name:"Pressure",data:T,type:"line",itemStyle:{normal:{color:"#06B800",color0:"#FA0000",borderColor:null,borderColor0:null,opacity:0}},endLabel:{show:!0,fontSize:8,color:"#fff",offset:[-5,0],padding:3,borderRadius:3,textBorderWidth:0,backgroundColor:o.accentColorSecondary,formatter:function(g){const S=T;let $=0;for(let y=0;y<S.length;y++){let t=S[y];t>$&&($=t)}let u=0,p=0;for(let y=0;y<S.length;y++){const t=parseInt(S[y]);(a.ch_spot==1&&t>=128&&t<=550||a.ch_spot==2&&t>=0&&t<=600||a.ch_spot==3&&t>=0&&t<=600||a.ch_spot==4&&t>=0&&t<=600||a.ch_spot==5&&t>=0&&t<=600||a.ch_spot==6&&t>=0&&t<=600||a.ch_spot==7&&t>=0&&t<=600||a.ch_spot==8&&t>=0&&t<=600||a.ch_spot==9&&t>=0&&t<=600)&&(u+=t,p++)}let I=0;const H=g.data,B=$;I=(B-H)/B*100;const j=u/p;return`Cur: ${parseFloat(g.data).toFixed(2)}
Avg: ${parseFloat(j).toFixed(2)}
Perc:${I.toFixed(2)}%`}},lineStyle:{color:"#007BFF",width:2}}],e.value.setOption(_),c.value=99,setTimeout(()=>{h.value=!1,c.value=0},1e3)}catch(r){console.log(r),h.value=!1}n.value=!0},E=()=>new Promise((r,m)=>{const b={toolbox:{iconStyle:{color:`${o.accentColor}`}},legend:{textStyle:{color:`${o.accentColor}`}},xAxis:{axisLabel:{rotate:-45,color:`${o.accentColor}`}},yAxis:{splitLine:{lineStyle:{color:"#cccccc11"}},axisLabel:{color:`${o.accentColor}`}}};try{e.value.setOption(b),r()}catch(T){m(T)}});return F(()=>[e.value,a.ch_filter_date],()=>{h.value=!0,c.value=0,setTimeout(()=>{e.value.setOption({series:[]}),c.value=12,O()},500),e.value.on("click",r=>{alert("!")})}),F(()=>a.ch_timesplit,()=>{if(a.ch_timesplit!=0){const r={xAxis:{axisLabel:{rotate:-45,color:`${o.accentColor}`,interval:m=>(s.value[m].split(":")[0],s.value[m].split(":")[1]%a.ch_timesplit===0)}}};e.value.setOption(r)}else{const r={xAxis:{axisLabel:{rotate:-45,color:`${o.accentColor}`,interval:"auto"}}};e.value.setOption(r),console.log(e.value.getOption().xAxis[0])}}),F(()=>[o.accentColor],async()=>{await E().then(()=>{})}),D(()=>{const r=R(v.value);e.value=r,i.value=setInterval(()=>{n.value&&O()},7e3)}),Y(()=>{clearInterval(i.value),i.value=null}),(r,m)=>(f(),x("div",{class:"chparent",style:L({border:`1px solid ${C(o).accentColor}`})},[k(pt,{"id-spot":a.ch_spot},null,8,["id-spot"]),l("h3",{style:L({color:`${C(o).accentColorSecondary}`})},z(a.ch_name),5),l("div",{ref_key:"chart",ref:v,style:{width:"100%",height:"400px"}},null,512),h.value?(f(),x("div",{key:0,class:X(["chloader",[`${C(o).mTheme}`]])},[m[0]||(m[0]=l("img",{src:"https://i.pinimg.com/originals/cb/17/b8/cb17b80a942d7c317a35ff1324fae12f.gif"},null,-1)),l("div",dt,[l("span",{style:L([{"border-radius":"10px",position:"absolute",top:"0",left:"0",height:"100%",transition:"ease-in-out 1s"},{width:`${c.value}%`,background:`${C(o).accentColor}`}])},null,4)])],2)):J("",!0)],4))}}),ht={class:"col-md-3"},vt={class:"chartcontainer"},Tt=A({__name:"LineChartFol",setup(w){const o=P(),i=at();o.asideToggle(!1);const v=d((()=>{const e=new Date,n=e.getFullYear(),s=String(e.getMonth()+1).padStart(2,"0"),_=String(e.getDate()).padStart(2,"0");return`${n}-${s}-${_}`})()),h=d({}),c=d(0);return D(async()=>{await i.getSpots().then(e=>{h.value=e})}),(e,n)=>(f(),V(et,{"context-title":"FOL | Line Chart"},{default:N(()=>[l("div",ht,[k(ot,{"in-label":"X-Axis Time Split","model-value":c.value,"onUpdate:modelValue":n[0]||(n[0]=s=>c.value=s)},{default:N(()=>n[2]||(n[2]=[l("option",{value:"0"},"Auto",-1),l("option",{value:"5"},"5 Minutes",-1),l("option",{value:"10"},"10 Minutes",-1),l("option",{value:"15"},"15 Minutes",-1),l("option",{value:"30"},"30 Minutes",-1),l("option",{value:"45"},"45 Minutes",-1),l("option",{value:"60"},"1 Hour",-1)])),_:1},8,["model-value"]),k(tt,{"in-type":"date","in-label":"Date Filter","model-value":v.value,"onUpdate:modelValue":n[1]||(n[1]=s=>v.value=s)},null,8,["model-value"])]),l("div",vt,[(f(!0),x(Q,null,K(Object.keys(h.value),s=>(f(),V(mt,{key:s,ch_timesplit:c.value,ch_name:h.value[s].name,ch_filter_date:v.value,ch_spot:s},null,8,["ch_timesplit","ch_name","ch_filter_date","ch_spot"]))),128))])]),_:1}))}});export{Tt as default};
