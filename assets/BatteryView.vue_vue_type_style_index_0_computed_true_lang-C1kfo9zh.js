import{d as v,N as l,P as _,Q as f,S as b,r as h,o as n,c as r,e as o,u as g,f as w,t as S,a as B,T}from"./index-oJlMxYI3.js";import{h as k}from"./moment-C5S46NFB.js";import{a as I}from"./axios-BimPEqV4.js";const x="/assets/batt-OzIihCY1.png",M={class:"battery-container"},N={key:0,class:"batimg"},Y=["src"],D={class:"bt-parent"},V={class:"bt-perc"},C={key:1,class:"batt-failed"},P=v({__name:"BatteryView",props:{idSpot:{type:[Number,String],required:!0}},setup(d){const p=d,t=l({}),i=l(!1);_(async()=>{await c().then(e=>{t.value=e,m()})});const m=()=>{if(t.value!=null&&t.value.timestamp!=null){const e=k().format("YYYY-MM-DDTHH:MM:SS").split("T")[0],a=t.value.timestamp.split("T")[0];e==a&&(i.value=!0)}},u=setInterval(async()=>{await c().then(e=>{t.value=e})},6e4);f(()=>{clearInterval(u)});const c=async()=>new Promise(async(e,a)=>{try{const s={idspot:p.idSpot},y=await I.post(b.baseEnd+"api/Battery/getbatterylevel",s);e(y.data)}catch(s){a(s)}});return(e,a)=>{const s=h("font-awesome-icon");return n(),r("div",M,[t.value&&i.value?(n(),r("div",N,[o("img",{src:g(x),alt:"battery"},null,8,Y),o("div",D,[o("span",{style:w({width:`${parseInt(t.value.batt)}%`}),class:"bt-child"},null,4),o("div",V,S(parseInt(t.value.batt))+"%",1)])])):(n(),r("span",C,[o("b",null,[B(s,{icon:"exclamation-triangle"}),a[0]||(a[0]=T(" Battery reading failed"))])]))])}}});export{P as _};
